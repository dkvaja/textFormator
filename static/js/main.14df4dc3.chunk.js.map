{"version":3,"sources":["components/Navbar.jsx","components/Loader.jsx","components/TextArea.jsx","App.js","index.js"],"names":["Navbar","props","className","title","Loader","style","position","height","width","zIndex","backgroundColor","role","TextArea","useState","text","setText","isListening","setIsListening","maxHeight","onChange","event","console","debug","target","value","resize","placeholder","rows","length","split","filter","c","charAt","type","onClick","disabled","toUpperCase","toLowerCase","navigator","clipboard","writeText","trim","join","map","slice","window","responsiveVoice","voiceSupport","speak","alert","recognition","SpeechRecognition","webkitSpeechRecognition","onstart","start","onspeechend","stop","onresult","transcript","results","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14df4dc3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Navbar = (props) => {\r\n  return (\r\n    <>\r\n      <nav className=\"navbar navbar-dark bg-dark\">\r\n        <div className=\"container-fluid d-flex justify-content-center\">\r\n          <h2 className=\"text-light text-center\">{props.title}</h2>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <>\r\n            <div className=\"d-flex justify-content-center align-items-center bg-dark bg-opacity-50\" style={{\r\n                position: 'absolute',\r\n                height: '100vh',\r\n                width: '100%',\r\n                zIndex: '1'\r\n            }}>\r\n                <div style={{\r\n                    height: '10rem',\r\n                    width: '10rem',\r\n                    backgroundColor: '#fff'\r\n                }} className='d-flex flex-column justify-content-center align-items-center rounded-3'>\r\n                    <h4 className='mb-4'>\r\n                        Listening...\r\n                    </h4>\r\n                    <div className=\"spinner-grow text-primary d-flex justify-content-center align-content-center\" role=\"status\" />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React, { useState } from \"react\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst TextArea = () => {\r\n\r\n  const [text, setText] = useState(\"\");\r\n  const [isListening, setIsListening] = useState(false);\r\n\r\n  const handleTextChange = (event) => {\r\n    console.debug(event.target.value);\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const clearText = () => setText(\"\");\r\n\r\n  const changeTextToUpperCase = () => setText(text.toUpperCase());\r\n\r\n  const changeTextToLowerCase = () => setText(text.toLowerCase());\r\n\r\n  const copyText = () => navigator.clipboard.writeText(text);\r\n\r\n  const removeSpace = () => setText(text.trim().split(\"  \").join(\"\"));\r\n\r\n  const changeTextToSentenceCase = () =>\r\n    setText(\r\n      text\r\n        .split(\".\")\r\n        .map((c) => c.trim().charAt(0).toUpperCase() + c.slice(1))\r\n        .join(\". \")\r\n    );\r\n\r\n  const handleTextToSpeech = () => {\r\n    if (window.responsiveVoice.voiceSupport()) window.responsiveVoice.speak(text);\r\n    else alert(`Sorry! Your Browser doesn't Supported for Text2Speech.`)\r\n  }\r\n\r\n  const handleSpeechToText = () => {\r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    const recognition = new SpeechRecognition();\r\n\r\n    recognition.onstart = () => setIsListening(true);\r\n\r\n    recognition.start();\r\n\r\n    recognition.onspeechend = () => {\r\n      setIsListening(false)\r\n      alert(\"stopped listening, hope you are done...`\");\r\n      recognition.stop();\r\n    }\r\n\r\n    recognition.onresult = (event) => {\r\n      let transcript = event.results[0][0].transcript;\r\n      setText(transcript);\r\n    };\r\n  }\r\n  return (\r\n    <>\r\n      {isListening &&\r\n        <Loader />\r\n      }\r\n      <div className=\"container my-4 text-center\" style={{ maxHeight: '70vh' }}>\r\n        <h3>Enter Your Text Here</h3>\r\n        <textarea\r\n          className=\"form-control my-3\"\r\n          onChange={handleTextChange}\r\n          style={{ resize: \"none\" }}\r\n          placeholder={\"Enter your text here :-)\"}\r\n          value={text}\r\n          rows=\"15\"\r\n        />\r\n        <div className=\"container\">\r\n          <p className=\"m-1 fw-bold\">\r\n            Total Characters : {text.length ? text.length : 0}\r\n          </p>\r\n          <p className=\"m-1 fw-bold\">\r\n            Total Words :{\" \"}\r\n            {text.length\r\n              ? text\r\n                .split(\" \")\r\n                .filter((c) => (c.charAt(0) === \"\" ? false : true)).length\r\n              : 0}\r\n          </p>\r\n        </div>\r\n        <div className=\"container\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary m-1\"\r\n            onClick={clearText}\r\n            disabled={!text.length}\r\n          >\r\n            Clear\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary m-1\"\r\n            onClick={changeTextToUpperCase}\r\n            disabled={!text.length}\r\n          >\r\n            Uppercase\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary m-1\"\r\n            onClick={changeTextToLowerCase}\r\n            disabled={!text.length}\r\n          >\r\n            Lowercase\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary m-1\"\r\n            onClick={copyText}\r\n            disabled={!text.length}\r\n          >\r\n            Copy Text\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary m-1\"\r\n            onClick={removeSpace}\r\n            disabled={!text.length}\r\n          >\r\n            Remove Spaces\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary m-1\"\r\n            onClick={changeTextToSentenceCase}\r\n            disabled={!text.length}\r\n          >\r\n            Sentence Case\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary m-1\"\r\n            onClick={handleTextToSpeech}\r\n            disabled={!text.length}\r\n          >\r\n            Text to Speech\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary m-1\"\r\n            onClick={handleSpeechToText}\r\n          >\r\n            Speech To Text\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TextArea;\r\n","import React from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport TextArea from \"./components/TextArea\";\n\nconst App = () => {\n  return (\n    <>\n      <Navbar title=\"Text Helper\" />\n      <TextArea />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}